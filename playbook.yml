---
- name: Setup Dockerized E-commerce Application
  hosts: localhost
  connection: local
  become: true
  vars_files:
    - vars/main.yml
  tasks:
    - name: Clone the GitHub repository
      git:
        repo: "{{ github_repo }}"
        dest: "{{ project_src }}"
      tags: 
        - clone

    - name: Include roles for setup
      include_role:
        name: "{{ item }}"
      with_items:
        - docker
        - frontend
        - backend
        - mongodb
      tags:
        - setup

- name: Set up the application
  hosts: localhost
  become: true
  vars_files:
    - vars/main.yml
  tasks:
    - name: Install frontend dependencies
      command: npm install
      args:
        chdir: "{{ frontend_app_directory }}"
      tags: 
        - setup

    - name: Install backend dependencies
      command: npm install
      args:
        chdir: "{{ backend_app_directory }}"
      tags: 
        - setup

    - name: Build frontend Docker image
      command: docker build -t "koomespace1/frontend" -f "{{ frontend_app_directory }}/Dockerfile" "{{ frontend_app_directory }}"
      tags: 
        - setup

    - name: Build backend Docker image
      command: docker build -t "koomespace1/backend" -f "{{ backend_app_directory }}/Dockerfile" "{{ backend_app_directory }}"
      tags: 
        - setup

- name: Run the application containers
  hosts: localhost
  become: true
  vars_files:
    - vars/main.yml
  tasks:
    - name: Run frontend Docker container
      docker_container:
        name: frontend
        image: "koomespace1/frontend"
        state: started
        ports:
          - "3000:3000"
      tags: 
        - setup

    - name: Run backend Docker container
      docker_container:
        name: backend
        image: "koomespace1/backend"
        state: started
        ports:
          - "3001:3001"
      tags: 
        - setup
